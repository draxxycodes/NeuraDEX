# Use the official Python 3.11 slim image
FROM python:3.11-slim

# Set the working directory inside the container
WORKDIR /app

# Set environment variables to ensure clean and predictable execution
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV POETRY_VERSION=1.7.1
ENV POETRY_HOME="/opt/poetry"
ENV POETRY_NO_INTERACTION=1

# Install Poetry package manager
RUN python3 -m venv $POETRY_HOME && \
    $POETRY_HOME/bin/pip install --upgrade pip && \
    $POETRY_HOME/bin/pip install "poetry==$POETRY_VERSION"
ENV PATH="$POETRY_HOME/bin:$PATH"

# Copy dependency definition files to leverage Docker cache layers
COPY pyproject.toml poetry.lock ./

# Install project dependencies, excluding development ones
RUN poetry install --no-dev --no-root

# Copy the entire project source code into the container
COPY . .

# The CMD to run will be specified in docker-compose.yml for each service
# This default command is for reference.
# Example: CMD ["poetry", "run", "python", "agents/orchestrator_agent/src/main.py"]